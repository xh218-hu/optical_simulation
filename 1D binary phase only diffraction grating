# 1D phase only diffraction grating
# Illuminated by a uniform plane wave with a wavelength of 1 um.

import matplotlib.pyplot as plt
import numpy as np

# Number of sample points for one period.
N = 2**10

# Period in um
L = 10

# Sampling period
delta_x = L/N

# Plot one period

x_element = delta_x * np.linspace(0,N-1,N)

y_element = np.zeros(N)

# Thckiness of the grating element in um
d = 1

for i in range(N):
    if x_element[i] < L/2: 
        y_element[i] = d
        
plt.figure(1)
plt.plot(x_element,y_element)
plt.xlabel('x (um)')
plt.ylabel('Height (um)')
plt.title('Grating element')
plt.grid()
plt.show()

# Let's say we have 11 period of gratings.

y_grating = np.tile(y_element, 11)
N_grating = 11*N
x_grating = delta_x * np.linspace(-N_grating/2,N_grating/2-1,N_grating) + L/4

plt.figure(2)
plt.plot(x_grating,y_grating)
plt.xlabel('x (um)')
plt.ylabel('Height (um)')
plt.title('1D grating')
plt.grid()
plt.show()

# An on-axis plane wave illumination with a wavelength of 1um
wl = 1

# Refractive index at 1um
n = 1.5

# Phase delay
phase_delay = (2*np.pi/wl) * (n-1) * d

# Assume a unifom plane wave illumation, we only illuminate part of the grating.

y_amp = np.zeros(N_grating)

for i in range(N_grating):
    if x_grating[i] > -4*L -L/4 and x_grating[i] < 4*L + L/4: 
        y_amp[i] = 1
        
plt.figure(3)
plt.plot(x_grating,y_amp,'r', linewidth=5)
plt.plot(x_grating,y_grating,'b')
plt.xlabel('x (um)')
plt.ylabel('Amplitude (a.u.)')
plt.title('Uniform illumination')
plt.grid()
plt.show()

# Phase delay of for this illimination

y_phase = y_amp * y_grating * phase_delay

plt.figure(4)
plt.plot(x_grating,y_phase,'g')
plt.xlabel('x (um)')
plt.ylabel('Phase (rad)')
plt.title('Phase')
plt.grid()
plt.show()

# Amplitude PSF is the FFT of the pupil mask

y = np.exp(1j*y_phase)

# Pad zeros

m = 2**14

y = np.pad(y, (m,m), 'constant', constant_values=(0,0))

yShift = np.fft.fftshift(y)
fftyShift = np.fft.fft(yShift)
yf = np.fft.fftshift(fftyShift)

# Normalise the intensity
yf_abs = np.abs(yf)
yf_abs = yf_abs/np.max(yf_abs)


# Define x cooridnate in the image plane

# A Fourier lens has a focal length of 10 cm
f = 10

fs = 1/delta_x

u = (fs/N_grating)*np.linspace(-(N_grating+2*m)/2,(N_grating+2*m)/2-1,N_grating+2*m)

xf = u*(wl*f)

# Plot diffraction pattern.
plt.figure(5)
plt.plot(xf,yf_abs)
plt.xlim(-25,25)
plt.xlabel('u (cm)')
plt.ylabel('Intensity (a.u.)')
plt.title('Diffraction of the 1D phase only grating')
plt.grid()
plt.show()
