# 1D point spread function (PSF) of a low-pass filter
# Create a retangular shape low-pass filter, the pupil mask is an amplitude mask
# Size of the 1D amplitude mask is 3 cm, wavelength is 0.5 um
# Uploaded to GitHub, the code is written in Python.

import matplotlib.pyplot as plt
import numpy as np

# Number of sample points. For FFT algorithm, this number is usually a power of 2.
N = 2**14

# Sampling frequency
fs = 100

x = (1/fs)*np.linspace(-N/2,N/2-1,N)

# Set the size of the 1D amplitude only pupil mask in cm
y = np.zeros(N)

for i in range(N):
    if x[i] > -1.5 and x[i] < 1.5: 
        y[i] = 1

# Plot the amplitude profile of the pupil mask
plt.figure(1)
plt.plot(x,y)
plt.xlabel('x (cm)')
plt.xlim(-3,3)
plt.ylabel('Amplitude (a.u.)')
plt.title('Amplitude retangular pupil mask')
plt.grid()
plt.show()

# Amplitude PSF is the FFT of the pupil mask
yShift = np.fft.fftshift(y)
fftyShift = np.fft.fft(yShift)
yf = np.fft.fftshift(fftyShift)

# Normalise the intensity
y_intensity = (np.abs(yf))**2
y_intensity = y_intensity/np.max(y_intensity)

# Define x cooridnate in the image plane

# A Fourier lens has a focal length of 20 cm
f = 20

# Wavelength of the plane wave is 0.5 um
wl = 0.5

u = (fs/N)*np.linspace(-N/2,N/2-1,N)

# Scale u and get the x-axis in the image plane. The unit is in um.
xf = u*(wl*f)

# Plot the intensity PSF
plt.figure(2)
plt.plot(xf,y_intensity)
plt.xlim(-20,20)
plt.xlabel('u (um)')
plt.ylabel('PSF (a.u.)')
plt.title('PSF of the amplitude pupil mask')
plt.grid()
plt.show()
